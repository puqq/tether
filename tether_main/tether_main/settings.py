"""
Django settings for tether_main project.
Generated by 'django-admin startproject' using Django 4.2.16.
"""
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'django-insecure-_i0_wr%li&102a7$xt+_$+5nx5g6q7ppi(yh-0@53qd+qnnw)g'
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

INSTALLED_APPS = [
    'corsheaders',                     # ← must come before django.middleware.common.CommonMiddleware
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',            # needed by allauth
    'tether_main.apps.TetherMainConfig',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'rest_framework',
    'django_celery_beat',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',           # ← high in the chain
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'tether_main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],               # add any template dirs here
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # required by allauth
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tether_main.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tetherdb',
        'USER': 'root',
        'PASSWORD': 'iLM-Gf11',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Los_Angeles'      # you can change to 'America/Los_Angeles' if you prefer
USE_I18N = True
USE_TZ = True

STATIC_URL = 'static/'
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

# ———————— REST framework ————————
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# ———————— CORS & CSRF for cross-site cookies ————————
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://127.0.0.1:3000',
]

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:8080',
]
if DEBUG:
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE   = False
    SESSION_COOKIE_SAMESITE = None
    CSRF_COOKIE_SAMESITE    = None
else:
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE   = True
    SESSION_COOKIE_SAMESITE = 'None'
    CSRF_COOKIE_SAMESITE    = 'None'

# ———————— AllAuth & email ————————
ACCOUNT_LOGIN_ON_SIGNUP          = True
ACCOUNT_EMAIL_REQUIRED           = False
ACCOUNT_EMAIL_VERIFICATION       = 'none'
ACCOUNT_AUTHENTICATED_REDIRECT_URL = '/dashboard/'
ACCOUNT_SIGNUP_REDIRECT_URL      = '/dashboard/'
ACCOUNT_LOGOUT_REDIRECT_URL      = '/'

LOGIN_REDIRECT_URL = '/'


EMAIL_BACKEND     = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST        = 'in-v3.mailjet.com'
EMAIL_PORT        = 587
EMAIL_USE_TLS     = True
EMAIL_HOST_USER   = 'd23d76c131b007cbfbfebc82c1684a9f'
EMAIL_HOST_PASSWORD = 'c64f3444c31934e8adf9ba618a946286'
DEFAULT_FROM_EMAIL = 'Tether <noreply@tethercap.com>'

# Celery settings
CELERY_BROKER_URL        = os.getenv('REDIS_URL', 'redis://localhost:6379/0')
CELERY_RESULT_BACKEND    = os.getenv('REDIS_URL', 'redis://localhost:6379/0')
CELERY_TIMEZONE          = 'America/Los_Angeles'
CELERY_ACCEPT_CONTENT    = ['json']
CELERY_TASK_SERIALIZER   = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_BEAT_SCHEDULER    = 'django_celery_beat.schedulers:DatabaseScheduler'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.security.csrf': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
